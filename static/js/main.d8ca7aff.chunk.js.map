{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","map","good","className","name","id","goodsFromServer","getId","App","state","isVisibleList","isReversed","sortBy","None","start","setState","reverseList","newSortBy","resetOfList","this","copyOfGoods","sort","prevGood","nextGood","Alphabet","localeCompare","Length","length","reverse","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sLAmBKA,E,0FCZQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACEC,UAAU,YADZ,SAIGD,EAAKE,MAFDF,EAAKG,UDNZC,G,MAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAL,KAAI,SAAAC,GAAI,MAAK,CAAEE,KAAMF,EAAMG,GAAIE,oB,SAE5BT,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SAYCU,E,4MACJC,MAAe,CACbC,eAAe,EACfC,YAAY,EACZC,OAAQd,EAAOe,M,EAGjBC,MAAQ,WACN,EAAKC,SAAS,CACZL,eAAe,K,EAInBM,YAAc,WACZ,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBC,OAAS,SAACK,GACR,EAAKF,SAAS,CACZH,OAAQK,K,EAIZC,YAAc,WACZ,EAAKH,SAAS,CACZH,OAAQd,EAAOe,KACfF,YAAY,K,4CAIhB,WAAU,IAAD,OACP,EAA8CQ,KAAKV,MAA3CC,EAAR,EAAQA,cAAeE,EAAvB,EAAuBA,OAAQD,EAA/B,EAA+BA,WACzBS,EAAW,YAAOd,GAiBxB,OAfAc,EAAYC,MAAK,SAACC,EAAUC,GAC1B,OAAQX,GACN,KAAKd,EAAO0B,SACV,OAAOF,EAASlB,KAAKqB,cAAcF,EAASnB,MAC9C,KAAKN,EAAO4B,OACV,OAAOJ,EAASlB,KAAKuB,OAASJ,EAASnB,KAAKuB,OAC9C,QACE,OAAO,MAIThB,GACFS,EAAYQ,UAIZ,sBAAKzB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,4BACEO,GACA,wBACEP,UAAU,cACV0B,KAAK,SACLC,QAASX,KAAKL,MAHhB,mBASDJ,GACC,qCACE,gCACE,wBACEP,UAAU,cACV0B,KAAK,SACLC,QAASX,KAAKH,YAHhB,qBAQA,wBACEb,UAAU,cACV0B,KAAK,SACLC,QAAS,kBAAM,EAAKlB,OAAOd,EAAO0B,WAHpC,iCAQA,wBACErB,UAAU,cACV0B,KAAK,SACLC,QAAS,kBAAM,EAAKlB,OAAOd,EAAO4B,SAHpC,4BAQA,wBACEvB,UAAU,cACV0B,KAAK,SACLC,QAASX,KAAKD,YAHhB,sBASDR,GACC,cAAC,EAAD,CAAWV,MAAOoB,c,GArGdW,IAAMC,WA8GTxB,IE1IfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8ca7aff.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as getId } from 'uuid';\nimport { Good } from './types/Good';\nimport { GoodsList } from './components';\nimport './App.scss';\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({ name: good, id: getId() }));\n\nenum SortBy {\n  None,\n  Alphabet,\n  Length,\n}\n\ntype State = {\n  isVisibleList: boolean;\n  isReversed: boolean;\n  sortBy: SortBy;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isVisibleList: false,\n    isReversed: false,\n    sortBy: SortBy.None,\n  };\n\n  start = () => {\n    this.setState({\n      isVisibleList: true,\n    });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortBy = (newSortBy: SortBy) => {\n    this.setState({\n      sortBy: newSortBy,\n    });\n  };\n\n  resetOfList = () => {\n    this.setState({\n      sortBy: SortBy.None,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isVisibleList, sortBy, isReversed } = this.state;\n    const copyOfGoods = [...goodsFromServer];\n\n    copyOfGoods.sort((prevGood, nextGood) => {\n      switch (sortBy) {\n        case SortBy.Alphabet:\n          return prevGood.name.localeCompare(nextGood.name);\n        case SortBy.Length:\n          return prevGood.name.length - nextGood.name.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyOfGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">List of Goods</h1>\n        {!isVisibleList && (\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={this.start}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisibleList && (\n          <>\n            <div>\n              <button\n                className=\"App__button\"\n                type=\"button\"\n                onClick={this.reverseList}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"App__button\"\n                type=\"button\"\n                onClick={() => this.sortBy(SortBy.Alphabet)}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className=\"App__button\"\n                type=\"button\"\n                onClick={() => this.sortBy(SortBy.Length)}\n              >\n                Sort by length\n              </button>\n\n              <button\n                className=\"App__button\"\n                type=\"button\"\n                onClick={this.resetOfList}\n              >\n                Reset\n              </button>\n            </div>\n\n            {isVisibleList && (\n              <GoodsList goods={copyOfGoods} />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { Good } from '../types/Good';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        className=\"GoodsList\"\n        key={good.id}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}