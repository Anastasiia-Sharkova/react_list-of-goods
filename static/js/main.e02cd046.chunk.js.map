{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortBy","GoodsList","state","isReverse","sortBy","None","wordLength","reversed","setState","sortByAlphabet","Alphabet","sortByLength","Length","handleChange","value","reset","this","newGoodsList","props","goodsList","filter","word","length","sort","prevGood","nextGood","localeCompare","reverse","type","onClick","className","onChange","event","Number","target","Array","from","_","i","map","num","item","React","Component","goodsFromServer","App","isVisible","start","ReactDOM","render","document","getElementById"],"mappings":"sLAGKA,E,qFAAAA,K,gBAAAA,E,oBAAAA,E,SAAAA,M,KAgBE,IAAMC,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,OAAQJ,EAAOK,KACfC,WAAY,GAJhB,EAOEC,SAAW,WACT,EAAKC,UAAS,SAACN,GAAD,MAAY,CACxBC,WAAYD,EAAMC,eATxB,EAaEM,eAAiB,WACf,EAAKD,UAAS,SAACN,GAAD,MAAY,CACxBE,OAASF,EAAME,SAAWJ,EAAOU,SAC7BV,EAAOK,KACPL,EAAOU,cAjBjB,EAqBEC,aAAe,WACb,EAAKH,UAAS,SAACN,GAAD,MAAY,CACxBE,OAASF,EAAME,SAAWJ,EAAOY,OAC7BZ,EAAOK,KACPL,EAAOY,YAzBjB,EA6BEC,aAAe,SAACC,GACd,EAAKN,SAAS,CACZF,WAAYQ,KA/BlB,EAmCEC,MAAQ,WACN,EAAKP,SAAS,CACZL,WAAW,EACXC,OAAQJ,EAAOK,KACfC,WAAY,KAvClB,4CA2CE,WAAU,IAAD,OACP,EAA0CU,KAAKd,MAAvCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQE,EAA3B,EAA2BA,WAErBW,EADgBD,KAAKE,MAAnBC,UACuBC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUhB,KAE7D,OAAQF,GACN,KAAKJ,EAAOU,SACVO,EAAaM,MACX,SAACC,EAAUC,GAAX,OAAwBD,EAASE,cAAcD,MAEjD,MAEF,KAAKzB,EAAOY,OACVK,EAAaM,MACX,SAACC,EAAUC,GAAX,OAAwBD,EAASF,OAASG,EAASH,UAYzD,OAJInB,GACFc,EAAaU,UAIb,gCACE,gCACE,wBACEC,KAAK,SACLC,QAASb,KAAKT,SACduB,UAAU,oBAHZ,qBAQA,wBACEF,KAAK,SACLC,QAASb,KAAKP,eACdqB,UAAU,oBAHZ,iCAQA,wBACEF,KAAK,SACLC,QAASb,KAAKL,aACdmB,UAAU,oBAHZ,4BAQA,wBACEC,SACE,SAAAC,GAAK,OAAI,EAAKnB,aAAaoB,OAAOD,EAAME,OAAOpB,SAEjDA,MAAOR,EACPwB,UAAU,oBALZ,SAQIK,MAAMC,KAAK,CAAEd,OAAQ,KAAM,SAACe,EAAGC,GAAJ,OAAUA,EAAI,KAAGC,KAAI,SAAAC,GAAG,OACjD,wBAAQ1B,MAAO0B,EAAf,kCAAiDA,IAAxBA,QAK/B,wBACEZ,KAAK,SACLC,QAASb,KAAKD,MACde,UAAU,oBAHZ,sBASF,6BAEIb,EAAasB,KAAI,SAACE,GAAD,OACf,oBAAeX,UAAU,kBAAzB,SACGW,GADMA,eA1HvB,GAA+BC,IAAMC,WCf/BC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAOIC,E,4MACJ3C,MAAQ,CACN4C,WAAW,G,EAGbC,MAAQ,WACN,EAAKvC,UAAS,SAACN,GAAD,MAAY,CACxB4C,WAAY5C,EAAM4C,e,4CAItB,WACE,IAAQA,EAAc9B,KAAKd,MAAnB4C,UAER,OACE,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,2BAECgB,GAAa,cAAC,EAAD,CAAW3B,UAAWyB,KAElCE,GACA,wBACElB,KAAK,SACLC,QAASb,KAAK+B,MACdjB,UAAU,cAHZ,0B,GArBQY,IAAMC,WAkCTE,ICpDfG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e02cd046.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\nenum SortBy {\n  Length = 'length',\n  Alphabet = 'alphabet',\n  None = '',\n}\n\ntype Props = {\n  goodsList: string[];\n};\n\ntype State = {\n  isReverse: boolean;\n  sortBy: SortBy;\n  wordLength: number;\n};\n\nexport class GoodsList extends React.Component<Props, State> {\n  state = {\n    isReverse: false,\n    sortBy: SortBy.None,\n    wordLength: 1,\n  };\n\n  reversed = () => {\n    this.setState((state) => ({\n      isReverse: !state.isReverse,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState((state) => ({\n      sortBy: (state.sortBy === SortBy.Alphabet)\n        ? SortBy.None\n        : SortBy.Alphabet,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState((state) => ({\n      sortBy: (state.sortBy === SortBy.Length)\n        ? SortBy.None\n        : SortBy.Length,\n    }));\n  };\n\n  handleChange = (value: number) => {\n    this.setState({\n      wordLength: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReverse: false,\n      sortBy: SortBy.None,\n      wordLength: 1,\n    });\n  };\n\n  render() {\n    const { isReverse, sortBy, wordLength } = this.state;\n    const { goodsList } = this.props;\n    const newGoodsList = goodsList.filter(word => word.length >= wordLength);\n\n    switch (sortBy) {\n      case SortBy.Alphabet:\n        newGoodsList.sort(\n          (prevGood, nextGood) => prevGood.localeCompare(nextGood),\n        );\n        break;\n\n      case SortBy.Length:\n        newGoodsList.sort(\n          (prevGood, nextGood) => prevGood.length - nextGood.length,\n        );\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReverse) {\n      newGoodsList.reverse();\n    }\n\n    return (\n      <div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.reversed}\n            className=\"GoodsList__button\"\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByAlphabet}\n            className=\"GoodsList__button\"\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className=\"GoodsList__button\"\n          >\n            Sort by length\n          </button>\n\n          <select\n            onChange={\n              event => this.handleChange(Number(event.target.value))\n            }\n            value={wordLength}\n            className=\"GoodsList__button\"\n          >\n            {\n              Array.from({ length: 10 }, (_, i) => i + 1).map(num => (\n                <option value={num} key={num}>{`Word length >= ${num}`}</option>\n              ))\n            }\n          </select>\n\n          <button\n            type=\"button\"\n            onClick={this.reset}\n            className=\"GoodsList__button\"\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          {\n            newGoodsList.map((item) => (\n              <li key={item} className=\"GoodsList__item\">\n                {item}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { GoodsList } from './components';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isVisible: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isVisible: false,\n  };\n\n  start = () => {\n    this.setState((state) => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">List of goods</h1>\n\n        {isVisible && <GoodsList goodsList={goodsFromServer} />}\n\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={this.start}\n            className=\"App__button\"\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}